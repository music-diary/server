// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Post {
//   id        Int      @id @default(uuid())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id])
//   authorId  Int
// }

enum Gender {
  FEMALE
  MALE
  OTHER
}

enum Role {
  USER
  ADMIN
}

enum UserStatus {
  ACTIVE
  DEACTIVE
}

model Users {
  id                      String     @id @default(uuid())
  account                 String     @unique
  phoneNumber             String     @unique
  name                    String     @db.Char(6)
  birthDay                DateTime
  gender                  Gender     @default(FEMALE)
  // genre: Genres[]
  isGenreSuggested        Boolean // 새로운 장르 추천 여부
  isAgreedMarketing       Boolean // 마케팅 동의여부
  profileImageKey         String? // image file s3 key
  profileImageUrl         String? // s3 url
  // friends: Friends[]
  isAvailableFriendLetter Boolean    @default(false)
  useLimitCount           Int        @default(1) // 무료인 경우 자정 기준 1번만 가능 (편지, 일기)
  role                    Role       @default(USER)
  status                  UserStatus @default(ACTIVE)
  // withdraw WithdrawInfo
  // report Report[]
  createdAt               DateTime   @default(now())
  updatedAt               DateTime   @updatedAt
}
